// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

 /** Mux4Way16
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
 
CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Register(in=dffin, load=loadreg, out=dffout, out=out);
    Mux16(a=auxload, b=false, sel=reset, out=dffin);
    Mux16(a=auxinc, b=in, sel=load, out=auxload);
    Mux16(a=dffout, b=dffinc, sel=inc, out=auxinc);
    Inc16(in=dffout, out=dffinc);
    Or8Way(in[0]=reset, in[1]=load, in[2]=inc, in[3..7]=false, out=loadreg);
}




